FROM rnakato/shortcake_r:3.4.0
LABEL maintainer="Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>"

USER root
WORKDIR /opt
SHELL ["/bin/bash", "-c"]

ARG GITHUB_PAT
ENV GITHUB_PAT=${GITHUB_PAT}

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    libgraphviz-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

### base
RUN pip install --no-cache-dir eeisp==0.5.0

### shortcake_default
COPY micromamba/env.shortcake_default.yaml /opt/env.shortcake_default.yaml
RUN eval "$(micromamba shell hook --shell bash)" \
    && micromamba create -y -n shortcake_default -f /opt/env.shortcake_default.yaml \
    && micromamba run -n shortcake_default pip install --no-cache-dir git+https://github.com/sfortma2/scranPY.git \
    && micromamba run -n shortcake_default python -m ipykernel install --name=shortcake_default \
    && micromamba run -n shortcake_default jupyter kernelspec list \
    && micromamba clean --all --yes \
    && rm /opt/env.shortcake_default.yaml

### squidpy
ENV ENVNAME=squidpy
RUN set -e \
    && micromamba create -y -n $ENVNAME python=3.10 nbconvert==6.5.4 ipykernel==6.25.0 -c defaults \
    && micromamba run -n $ENVNAME pip install --no-cache-dir squidpy==1.6.2 napari==0.5.5 dask[array]==2024.11.2 session-info \
    && micromamba run -n $ENVNAME python -m ipykernel install --name=$ENVNAME \
    && micromamba run -n $ENVNAME jupyter kernelspec list \
    && micromamba clean --all --yes

# pySCENIC
#ENV ENVNAME=pyscenic
#RUN set -e \
#    && micromamba create -y -n $ENVNAME python=3.7 nbconvert==6.5.4 ipykernel seaborn -c defaults \
#    && micromamba run -n $ENVNAME pip install --no-cache-dir pyscenic==0.12.1 numpy==1.19 loompy==2.0.17 scanpy==1.10.4 session-info \
#    && micromamba run -n $ENVNAME python -m ipykernel install --name=$ENVNAME \
#    && micromamba run -n $ENVNAME jupyter kernelspec list \
#    && micromamba clean --all --yes

# SCENIC+ (pySCENIC)
ENV ENVNAME=scenic
RUN micromamba create -y -n $ENVNAME python=3.11.8 nbconvert ipykernel -c defaults \
    && git clone https://github.com/aertslab/scenicplus \
    && cd scenicplus \
    && micromamba run -n $ENVNAME pip install . \
    && git clone https://github.com/aertslab/pycisTopic.git \
    && cd pycisTopic \
    && micromamba run -n $ENVNAME pip install -e . \
    && micromamba install -y -n $ENVNAME python-igraph louvain multicore-tsne ipywidgets -c defaults -c conda-forge \
    && micromamba run -n $ENVNAME python -m ipykernel install --name=$ENVNAME \
    && jupyter kernelspec list \
    && micromamba clean --all --yes

# Salmon (Alevin)
RUN wget --progress=dot:giga https://github.com/COMBINE-lab/salmon/releases/download/v1.10.0/salmon-1.10.0_linux_x86_64.tar.gz \
    && tar zxvf salmon-1.10.0_linux_x86_64.tar.gz \
    && rm salmon-1.10.0_linux_x86_64.tar.gz
ENV PATH=${PATH}:/opt/salmon-latest_linux_x86_64/bin/

### Final setting
COPY run_env.sh /opt/scripts/run_env.sh
RUN chmod +x /opt/scripts/run_env.sh

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh \
    && mkdir -p /.singularity.d \
    && echo '#!/bin/sh\n. /entrypoint.sh\nexec "$@"' > /.singularity.d/runscript \
    && chmod +x /.singularity.d/runscript

ENV LD_LIBRARY_PATH=/opt/micromamba/envs/shortcake_default/lib:$LD_LIBRARY_PATH
ENV GITHUB_PAT=
ENV PATH=$PATH:/opt:/opt/scripts:
ENTRYPOINT ["/entrypoint.sh"]

CMD ["/bin/bash"]
